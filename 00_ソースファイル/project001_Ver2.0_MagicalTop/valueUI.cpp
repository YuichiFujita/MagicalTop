//============================================================
//
//	数字UI処理 [valueUI.cpp]
//	Author：藤田勇一
//
//============================================================
//************************************************************
//	インクルードファイル
//************************************************************
#include "valueUI.h"
#include "renderer.h"
#include "texture.h"

//************************************************************
//	マクロ定義
//************************************************************
#define VALYE_UI_PRIO	(5)	// 数字UI表示の優先順位

//************************************************************
//	子クラス [CValueUI] のメンバ関数
//************************************************************
//============================================================
//	コンストラクタ
//============================================================
CValueUI::CValueUI() : CObject(CObject::LABEL_NONE, VALYE_UI_PRIO)
{
	// メンバ変数をクリア
	m_pTitle = NULL;	// タイトル情報
	m_pValue = NULL;	// 数字情報
	m_pos = VEC3_ZERO;	// 位置
}

//============================================================
//	デストラクタ
//============================================================
CValueUI::~CValueUI()
{

}

//============================================================
//	初期化処理
//============================================================
HRESULT CValueUI::Init(void)
{
	// メンバ変数を初期化
	m_pTitle = NULL;	// タイトル情報
	m_pValue = NULL;	// 数字情報
	m_pos = VEC3_ZERO;	// 位置

	// 成功を返す
	return S_OK;
}

//============================================================
//	終了処理
//============================================================
void CValueUI::Uninit(void)
{

}

//============================================================
//	更新処理
//============================================================
void CValueUI::Update(void)
{

}

//============================================================
//	描画処理
//============================================================
void CValueUI::Draw(void)
{

}

//============================================================
//	生成処理
//============================================================
CValueUI *CValueUI::Create(const D3DXVECTOR3& rPos)
{
	// ポインタを宣言
	CValueUI *pValueUI = NULL;	// 数字UI生成用

	if (UNUSED(pValueUI))
	{ // 使用されていない場合

		// メモリ確保
		pValueUI = new CValueUI;	// 数字UI
	}
	else { assert(false); return NULL; }	// 使用中

	if (USED(pValueUI))
	{ // 確保に成功している場合

		// 数字UIの初期化
		if (FAILED(pValueUI->Init()))
		{ // 初期化に失敗した場合

			// メモリ開放
			delete pValueUI;
			pValueUI = NULL;

			// 失敗を返す
			return NULL;
		}

		// 位置を設定
		pValueUI->SetPosition(rPos);

		// 確保したアドレスを返す
		return pValueUI;
	}
	else { assert(false); return NULL; }	// 確保失敗
}
